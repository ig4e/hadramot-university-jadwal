// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Table {
  id       Int   @id @default(autoincrement())
  type     Int
  major    Major @relation(fields: [majorId], references: [id])
  level    Int
  semester Int

  days TableDay[]

  majorId   Int
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TableDay {
  id Int @id @default(autoincrement())

  subjects TableDaySubjects[]

  table   Table @relation(fields: [tableId], references: [id])
  tableId Int
}

model TableDaySubjects {
  id Int @id @default(autoincrement())

  time    String
  subject Subject @relation(fields: [subjectId], references: [id])
  teacher Teacher @relation(fields: [teacherId], references: [id])

  TableDay   TableDay @relation(fields: [tableDayId], references: [id])
  tableDayId Int
  teacherId  Int
  subjectId  Int
}

model Major {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  tables    Table[]
}

model Teacher {
  id       Int                @id @default(autoincrement())
  name     String             @unique
  subjects Subject[]
  workDays TeacherOnWorkDay[]
  tables   TableDaySubjects[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Subject {
  id       Int                @id @default(autoincrement())
  name     String             @unique
  teachers Teacher[]
  tables   TableDaySubjects[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TeacherOnWorkDayHours {
  id                 Int              @id @default(autoincrement())
  startAt            Decimal
  endAt              Decimal
  teacherOnWorkDay   TeacherOnWorkDay @relation(fields: [teacherOnWorkDayId], references: [id])
  teacherOnWorkDayId Int

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TeacherOnWorkDay {
  id        Int                     @id @default(autoincrement())
  teacher   Teacher                 @relation(fields: [teacherId], references: [id])
  day       WorkDay                 @relation(fields: [workDayId], references: [id])
  dates     TeacherOnWorkDayHours[]
  teacherId Int
  workDayId String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model WorkDay {
  id               String             @id @default(uuid())
  name             String
  TeacherOnWorkDay TeacherOnWorkDay[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
