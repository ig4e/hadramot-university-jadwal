// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Table {
  id       String @id @default(uuid())
  major    Major  @relation(fields: [majorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  type     Int // 1 = 3am, 2 = thanwy
  level    Int // 1, 2, 3, 4
  semester Int // 1 = first, 2 =  second

  subjects TableSubject[]

  majorId   String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TableSubject {
  id      String  @id @default(uuid())
  table   Table   @relation(fields: [tableId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  day     Day     @relation(fields: [dayId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  subject Subject @relation(fields: [subjectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  teacher Teacher @relation(fields: [teacherId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  hall    Hall    @relation(fields: [hallId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  startsAt Float
  endsAt   Float

  tableId   String
  dayId     String
  subjectId String
  teacherId String
  hallId    String
}

model Teacher {
  id            String            @id @default(uuid())
  name          String            @unique
  subjects      Subject[]
  workDates     TeacherWorkDate[]
  tableSubjects TableSubject[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TeacherWorkDate {
  id       String  @id @default(uuid())
  day      Day     @relation(fields: [dayId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  teacher  Teacher @relation(fields: [teacherId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  startsAt Float
  endsAt   Float

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  teacherId String
  dayId     String
}

model Major {
  id            String  @id @default(uuid())
  type          Int     @default(1) // 1 = 3am, 2 = thanwy
  name          String  //@unique
  studentsCount Int
  tables        Table[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Hall {
  id            String         @id @default(uuid())
  name          String         @unique
  studentsCount Int
  tableSubjects TableSubject[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Subject {
  id            String         @id @default(uuid())
  name          String         @unique
  teachers      Teacher[]
  tableSubjects TableSubject[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Day {
  id   String @id @default(uuid())
  name String @unique

  teacherWorkDates TeacherWorkDate[]
  tableSubjects    TableSubject[]
}
