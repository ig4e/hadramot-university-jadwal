// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Table {
  id       String @id @default(uuid())
  type     Int
  major    Major  @relation(fields: [majorId], references: [id])
  level    Int
  semester Int

  days TableDay[]

  majorId   String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TableDay {
  id String @id @default(uuid())

  subjects TableDaySubjects[]

  table   Table  @relation(fields: [tableId], references: [id])
  tableId String
}

model TableDaySubjects {
  id String @id @default(uuid())

  time    String
  subject Subject @relation(fields: [subjectId], references: [id])
  teacher Teacher @relation(fields: [teacherId], references: [id])

  tableDay   TableDay @relation(fields: [tableDayId], references: [id])
  tableDayId String
  teacherId  String
  subjectId  String
}

model Major {
  id        String   @id @default(uuid())
  name      String   @unique
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  tables    Table[]
}

model Teacher {
  id       String             @id @default(uuid())
  name     String             @unique
  subjects SubjectOnTeacher[]
  workDays TeacherOnWorkDay[]
  tables   TableDaySubjects[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model SubjectOnTeacher {
  teacher   Teacher @relation(fields: [teacherId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  teacherId String // relation scalar field (used in the `@relation` attribute above)
  subject   Subject @relation(fields: [subjectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  subjectId String // relation scalar field (used in the `@relation` attribute above)

  @@id([teacherId, subjectId])
}

model Subject {
  id       String             @id @default(uuid())
  name     String             @unique
  teachers SubjectOnTeacher[]
  tables   TableDaySubjects[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TeacherOnWorkDayHours {
  id                 String           @id @default(uuid())
  startAt            Decimal
  endAt              Decimal
  teacherOnWorkDay   TeacherOnWorkDay @relation(fields: [teacherOnWorkDayId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  teacherOnWorkDayId String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TeacherOnWorkDay {
  id        String                  @id @default(uuid())
  teacher   Teacher                 @relation(fields: [teacherId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  day       WorkDay                 @relation(fields: [workDayId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  dates     TeacherOnWorkDayHours[]
  teacherId String
  workDayId String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model WorkDay {
  id               String             @id @default(uuid())
  name             String             @unique
  teacherOnWorkDay TeacherOnWorkDay[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
