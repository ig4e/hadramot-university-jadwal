// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    //previewFeatures = ["driverAdapters"]
}

generator zod {
    provider = "zod-prisma-types"
    output   = "./generated/zod"
}

// datasource db {
//     provider = "sqlite"
//     url      = env("DATABASE_URL")
// }

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Table {
    id       Int   @id @default(autoincrement())
    major    Major @relation(fields: [majorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    type     Int // 1 = 3am, 2 = thanwy
    level    Int // 1, 2, 3, 4
    semester Int // 1 = first, 2 =  second

    subjects TableSubject[]

    majorId   Int
    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())
}

model TableSubject {
    id      Int     @id @default(autoincrement())
    table   Table   @relation(fields: [tableId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    day     Day     @relation(fields: [dayId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    subject Subject @relation(fields: [subjectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    teacher Teacher @relation(fields: [teacherId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    hall    Hall    @relation(fields: [hallId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    startsAt Float
    endsAt   Float

    tableId   Int
    dayId     String
    subjectId Int
    teacherId Int
    hallId    Int
}

model Teacher {
    id            Int               @id @default(autoincrement())
    name          String            @unique
    subjects      Subject[]
    workDates     TeacherWorkDate[]
    tableSubjects TableSubject[]

    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())
}

model TeacherWorkDate {
    id       Int     @id @default(autoincrement())
    day      Day     @relation(fields: [dayId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    teacher  Teacher @relation(fields: [teacherId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    startsAt Float
    endsAt   Float

    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())

    teacherId Int
    dayId     String
}

model Major {
    id            Int     @id @default(autoincrement())
    type          Int     @default(1) // 1 = 3am, 2 = thanwy
    name          String
    studentsCount Int
    tables        Table[]

    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())
}

model Hall {
    id            Int            @id @default(autoincrement())
    name          String         @unique
    studentsCount Int
    tableSubjects TableSubject[]

    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())
}

model Subject {
    id            Int            @id @default(autoincrement())
    name          String         @unique
    teachers      Teacher[]
    tableSubjects TableSubject[]

    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())
}

model Day {
    id   String @id
    name String @unique

    teacherWorkDates TeacherWorkDate[]
    tableSubjects    TableSubject[]
}
